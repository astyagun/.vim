#!/usr/local/bin/ruby
# Generates tags file for current directory
# Features:
# - Run only in subdirectories of allowed directories (DirectoryFilter::ALLOWED_DIRECTORIES)
# - Excludes paths from tags generation (TagsGenerator::EXCLUDES)
# - Instant switch of tags file
require 'fileutils'

class Runner
  def call
    exit 1 unless DirectoryFilter.new(Dir.pwd).allowed?
    TagsGenerator.new.call
  end
end

class TagsGenerator
  TAGS_FILE = ARGV[0] || 'tags'
  EXCLUDES  = %w(
    node_modules
    vendor
    tmp
  )

  def call
    system "ripper-tags -R -f #{tmp_file_name} #{exclusion_options}"
    FileUtils.mv tmp_file_name, TAGS_FILE, force: true
  end

  private

  def exclusion_options
    EXCLUDES.map { |pattern| "--exclude=#{pattern}" }.join ' '
  end

  def tmp_file_name
    "#{TAGS_FILE}.tmp"
  end
end

class DirectoryFilter
  ALLOWED_DIRECTORIES = %w(
    ~/Code
    ~/.vim
  )

  attr_reader :current_directory

  def initialize(current_directory)
    @current_directory = current_directory
  end

  def allowed?
    allowed_directories.any? { |allowed| current_directory.start_with? allowed }
  end

  private

  def allowed_directories
    ALLOWED_DIRECTORIES.map { |directory| expand directory }
  end

  def expand(path)
    File.expand_path path
  end
end

Runner.new.call
